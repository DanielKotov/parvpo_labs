version: "3"

services:

  grafana:
    image: grafana/grafana:9.5.19
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    volumes:
      - $PWD/grafana_data:/var/lib/grafana

  promtail:
    image: grafana/promtail:2.3.0
    container_name: promtail
    volumes:
      - app-volume:/dummy
      - ./promtail-config.yaml:/etc/promtail/promtail.yaml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/promtail.yaml

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"

  loki:
    image: grafana/loki:2.9.1
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
        #- loki-data:/data
    command: -config.file=/etc/loki/local-config.yaml

  postgres:
    build: ./postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "log_statement=all", "-c", "logging_collector=on", "-c", "log_destination=jsonlog"]

  auth_service:
    build: ./auth_service
    ports:
      - "5000:5000"
    volumes:
      - app-volume:/dummy
    environment:
      - FLASK_DEBUG=1
    depends_on:
      - postgres
      - rabbitmq

  file_management_service:
    build: ./file_management_service
    ports:
      - "5002:5002"
    volumes:
      - app-volume:/dummy
    environment:
      - ENCRYPTION_KEY=WX78XrhcWEcPgqbZ7C/Aq7tokjleyQvc5LBx7luBn3A=
    depends_on:
      - postgres
      - rabbitmq

volumes:
  app-volume:
